-- DECLARAÇÃO DE VARIÁVEIS
DECLARE @teste int

SET @teste = 100

print @teste

DECLARE @teste2 int = 10

print @teste2

DECLARE @MAIOR_VALORVENDA DECIMAL(9,2)

select @MAIOR_VALORVENDA = vl_subtotal from tb_venda

print @MAIOR_VALORVENDA

-- OPERADORES MATEMÁTICOS
declare @a int = 100, @b int = 20

print @a + @b
print @a - @b
print @a * @b
print @a / @b
print @a % @b

declare @nome varchar(20) = 'Gustavo', @sobrenome varchar(20) = 'Ferreira', @i int = 1

print @nome + ' '+ @sobrenome 

--print @nome + ' '+ @sobrenome + @i -- erro

print concat(@nome,' ',@sobrenome,@i)

-- operadores relacionais, operadores lógicos e desvios condicionais
declare @n1 int = 8 , @n2 int = 8

IF @N1 > @N2
	print concat(@n1,' é maior que ',@n2)

IF @N1 < @N2
	print concat(@n1,' é menor que ',@n2)

IF @N1 = @N2
	print concat(@n1,' é igual a ',@n2)

declare @n1 int = 10 , @n2 int = 8

IF @N1 > @N2
	print concat(@n1,' é maior que ',@n2)
ELSE IF @N1 < @N2
		print concat(@n1,' é menor que ',@n2)
	ELSE
		print concat(@n1,' é igual a ',@n2)

-- laços de repetição

declare @f1 int, @f2 int

set @f1 = 1

while @f1 <=  10
begin
	print concat('---- TABUADA DO ',@f1,' ----')
	
	set @f2 = 1

	while @f2 <= 10
	begin
		print concat(@f1,' x ',@f2,' = ',@f1*@f2)
		set @f2 += 1 --set @f2 = @f2 +1
	end

	set @f1 += 1
end

-- VIEWS
CREATE VIEW VW_CLIENTE_COMPRA_HD_MESA
AS
	SELECT * FROM DB_MADA_VAREJO..TB_CLIENTE
WHERE ID_CLIENTE IN -- CLIENTES QUE COMPRARAM O HD 
 (SELECT ID_CLIENTE FROM DB_MADA_VAREJO..TB_VENDA
  WHERE ID_VENDA IN 
	(SELECT ID_VENDA FROM DB_MADA_VAREJO..TB_VENDAITEM
	 WHERE ID_PRODUTO = 
		(SELECT ID_PRODUTO FROM DB_MADA_VAREJO..TB_PRODUTO
		 WHERE NM_PRODUTO = 'Hd Seagate Externo Portatil Lacie 2tb Sthg2000400 -')
	)
  )
AND 
ID_CLIENTE IN -- CLIENTES QUE COMPRARAM MESA DE CABECEIRA PARA CACHORRO 
 (SELECT ID_CLIENTE FROM DB_MADA_VAREJO..TB_VENDA
  WHERE ID_VENDA IN 
	(SELECT ID_VENDA FROM DB_MADA_VAREJO..TB_VENDAITEM
	 WHERE ID_PRODUTO = 
		(SELECT ID_PRODUTO FROM DB_MADA_VAREJO..TB_PRODUTO
		 WHERE NM_PRODUTO = 'Mesa de Cabeceira com Casinha para Cachorro Gato Pet - Branco - Ofertamo')
	)
  )

SELECT * FROM VW_CLIENTE_COMPRA_HD_MESA

-- RELATORIO DE VENDAS DO ANO
CREATE VIEW VW_REPORT_VENDAS_ANUAL
AS
SELECT 
	MONTH(DT_VENDA)				AS NR_MES_VENDA,
	SUM(VL_SUBTOTAL + VL_FRETE) AS VL_VENDA,
	COUNT(*)					AS QTD_VENDA
FROM DB_MADA_VAREJO..TB_VENDA
WHERE YEAR(DT_VENDA) = YEAR(GETDATE())
GROUP BY MONTH(DT_VENDA)

SELECT * FROM VW_REPORT_VENDAS_ANUAL

-- FUNCTION
SELECT GETDATE()

select upper('gustavo mendes ferreira')
select lower('GUSTAVO MENDES FERREIRA')
			  
			  
-- CRIAR FUNÇÃO QUE RECEBE UM TEXTO E COLOCA A PRIMEIRA LETRA DE CADA PALAVRA EM MAIUSCULO
CREATE FUNCTION FN_PMAISCULO (@TEXTO VARCHAR(8000))
RETURNS VARCHAR(8000)
AS
BEGIN
	DECLARE @NR_TEXTO SMALLINT
	DECLARE @TEXTO_NOVO	VARCHAR(8000)

	SET @NR_TEXTO = 1
	SET @TEXTO_NOVO = ''

	WHILE @NR_TEXTO <= LEN(@TEXTO)
	BEGIN
		IF @NR_TEXTO = 1 OR SUBSTRING(@TEXTO, @NR_TEXTO-1,1) = ' '
			SET @TEXTO_NOVO = @TEXTO_NOVO + UPPER(SUBSTRING(@TEXTO,@NR_TEXTO,1))
		ELSE
			SET @TEXTO_NOVO = @TEXTO_NOVO + LOWER(SUBSTRING(@TEXTO,@NR_TEXTO,1))
		
		SET @NR_TEXTO += 1 

	END

	RETURN @TEXTO_NOVO
END

SELECT dbo.FN_PMAIUSCULO ('gusTAVo MENDES ferreira')

SELECT NM_CLIENTE, dbo.FN_PMAIUSCULO(NM_CLIENTE) FROM DB_MADA_VAREJO..TB_CLIENTE

UPDATE DB_MADA_VAREJO..TB_CLIENTE
SET NM_CLIENTE = DBO.FN_PMAIUSCULO(NM_CLIENTE)

SELECT 
	DISTINCT RIGHT(DS_EMAIL, LEN(DS_EMAIL) - CHARINDEX('@',DS_EMAIL)+1)
FROM DB_MADA_VAREJO..TB_CLIENTE

CREATE FUNCTION FN_ARRUMAEMAIL (@email varchar(8000))
 returns varchar(8000)
as
BEGIN
	declare @email_ok varchar(8000)

	IF @EMAIL LIKE '%@%HOTMAIL%'
		set @email_ok = concat(left(@email,charindex('@',@email)),'hotmail.com')
	ELSE IF @EMAIL LIKE '%@%GMAIL%'
		set @email_ok = concat(left(@email,charindex('@',@email)),'gmail.com')
	ELSE
		set @email_ok = @email
	
	return (@email_ok)
END	


select ds_email, dbo.fn_arrumaemail(ds_email) from DB_MADA_VAREJO..tb_cliente
where ds_email like '%@__gmail%'

-- procedure de retorno de campanha
CREATE PROCEDURE SP_FAT_INCREMENTAL @ID_CAMPANHA INT
AS
BEGIN
	DECLARE @QTD_ABORDADO INT, 
		    @QTD_GRUPO_CONTROLE INT, 
			@QTD_ABORDADO_CONVERTIDO INT,
			@QTD_GRUPO_CONTROLE_CONVERTIDO INT,
			@FAT_ABORDADO DECIMAL(9,2),
			@FAT_GRUPO_CONTROLE DECIMAL (9,2),
			@TKT_MEDIO_GRUPO_CONTROLE DECIMAL (9,2),
			@CONVERSAO_GRUPO_CONTROLE DECIMAL (9,8)
	
	-- ATRIBUINDO OS VALORES DO GRUPO ABORDADO
	SELECT 
		@QTD_ABORDADO = COUNT(DISTINCT TB_CAMPANHAPUBLICO.ID_CLIENTE),
		@QTD_ABORDADO_CONVERTIDO = COUNT(DISTINCT TB_VENDA.ID_CLIENTE),
		@FAT_ABORDADO = SUM(TB_VENDA.VL_SUBTOTAL + TB_VENDA.VL_FRETE)
	FROM DB_MADA_VAREJO..TB_CAMPANHAPUBLICO
		INNER JOIN DB_MADA_VAREJO..TB_CAMPANHA 
			ON TB_CAMPANHAPUBLICO.ID_CAMPANHA = TB_CAMPANHA.ID
		LEFT JOIN DB_MADA_VAREJO..TB_VENDA
			ON TB_VENDA.ID_CLIENTE = TB_CAMPANHAPUBLICO.ID_CLIENTE
			AND TB_VENDA.DT_VENDA BETWEEN TB_CAMPANHA.DT_INI_VIGENCIA AND TB_CAMPANHA.DT_FIM_VIGENCIA
	WHERE TB_CAMPANHA.ID = @ID_CAMPANHA
	AND TB_CAMPANHAPUBLICO.FG_GRUPO_CONTROLE = 0 -- ABORDADOS

	-- ATRIBUINDO OS VALORES DO GRUPO CONTROLE
	SELECT 
		@QTD_GRUPO_CONTROLE = COUNT(DISTINCT TB_CAMPANHAPUBLICO.ID_CLIENTE),
		@QTD_GRUPO_CONTROLE_CONVERTIDO  = COUNT(DISTINCT TB_VENDA.ID_CLIENTE),
		@FAT_GRUPO_CONTROLE  = SUM(TB_VENDA.VL_SUBTOTAL + TB_VENDA.VL_FRETE)
	FROM DB_MADA_VAREJO..TB_CAMPANHAPUBLICO
		INNER JOIN DB_MADA_VAREJO..TB_CAMPANHA 
			ON TB_CAMPANHAPUBLICO.ID_CAMPANHA = TB_CAMPANHA.ID
		LEFT JOIN DB_MADA_VAREJO..TB_VENDA
			ON TB_VENDA.ID_CLIENTE = TB_CAMPANHAPUBLICO.ID_CLIENTE
			AND TB_VENDA.DT_VENDA BETWEEN TB_CAMPANHA.DT_INI_VIGENCIA AND TB_CAMPANHA.DT_FIM_VIGENCIA
	WHERE TB_CAMPANHA.ID = @ID_CAMPANHA
	AND TB_CAMPANHAPUBLICO.FG_GRUPO_CONTROLE = 1 -- GRUPO CONTROLE

	-- CALCULANDO O TICKET MÉDIO DO GRUPO CONTROLE
	SET @TKT_MEDIO_GRUPO_CONTROLE = @FAT_GRUPO_CONTROLE / @QTD_GRUPO_CONTROLE_CONVERTIDO

	-- CALCULO DA CONVERSÃO NO GRUPO CONTROLE
	SET @CONVERSAO_GRUPO_CONTROLE = CAST(@QTD_GRUPO_CONTROLE_CONVERTIDO AS DECIMAL(9,3))
										/ @QTD_GRUPO_CONTROLE

	-- CALCULO DO FATURAMENTO INCREMENTAL
	SELECT @FAT_ABORDADO - (@CONVERSAO_GRUPO_CONTROLE * @QTD_ABORDADO * @TKT_MEDIO_GRUPO_CONTROLE)

END
		
EXEC DBO.SP_FAT_INCREMENTAL 111