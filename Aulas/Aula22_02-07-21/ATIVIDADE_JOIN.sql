--ATIVIDADE_JOIN
--Coloque o banco DB_MADA_VAREJO em uso
USE DB_MADA_VAREJO

/*1. Selecione o nome do cliente, o nome dos produtos que
ele comprou, o mês/ano da compra no seguinte formato
(janeiro/2019). Ordene pelo nome do cliente e data de
venda.*/

SELECT
	TB_CLIENTE.NM_CLIENTE, 
	TB_PRODUTO.NM_PRODUTO,
	CASE
		WHEN MONTH(TB_VENDA.DT_VENDA) = 1   THEN CONCAT('janeiro/',YEAR(TB_VENDA.DT_VENDA))
		WHEN MONTH(TB_VENDA.DT_VENDA) = 2   THEN CONCAT('fevereiro/',YEAR(TB_VENDA.DT_VENDA))
		WHEN MONTH(TB_VENDA.DT_VENDA) = 3   THEN CONCAT('março/',YEAR(TB_VENDA.DT_VENDA))
		WHEN MONTH(TB_VENDA.DT_VENDA) = 4   THEN CONCAT('abril/',YEAR(TB_VENDA.DT_VENDA))
		WHEN MONTH(TB_VENDA.DT_VENDA) = 5   THEN CONCAT('maio/',YEAR(TB_VENDA.DT_VENDA))
		WHEN MONTH(TB_VENDA.DT_VENDA) = 6   THEN CONCAT('junho/',YEAR(TB_VENDA.DT_VENDA))
		WHEN MONTH(TB_VENDA.DT_VENDA) = 7   THEN CONCAT('julho/',YEAR(TB_VENDA.DT_VENDA))
		WHEN MONTH(TB_VENDA.DT_VENDA) = 8   THEN CONCAT('agosto/',YEAR(TB_VENDA.DT_VENDA))
		WHEN MONTH(TB_VENDA.DT_VENDA) = 9   THEN CONCAT('setembro/',YEAR(TB_VENDA.DT_VENDA))
		WHEN MONTH(TB_VENDA.DT_VENDA) = 10  THEN CONCAT('outubro/',YEAR(TB_VENDA.DT_VENDA))
		WHEN MONTH(TB_VENDA.DT_VENDA) = 11  THEN CONCAT('novembro/',YEAR(TB_VENDA.DT_VENDA))
		WHEN MONTH(TB_VENDA.DT_VENDA) = 12  THEN CONCAT('dezembro/',YEAR(TB_VENDA.DT_VENDA))
	END DATA_FORMATADA
FROM TB_CLIENTE
	INNER JOIN TB_VENDA
		ON TB_VENDA.ID_CLIENTE = TB_CLIENTE.ID_CLIENTE
	INNER JOIN TB_VENDAITEM
		ON TB_VENDAITEM.ID_VENDA = TB_VENDA.ID_VENDA
	INNER JOIN TB_PRODUTO
		ON TB_PRODUTO.ID_PRODUTO = TB_VENDAITEM.ID_PRODUTO
ORDER BY TB_CLIENTE.NM_CLIENTE, TB_VENDA.DT_VENDA


/*2. Exiba o id da venda, a data da venda, a data da entrega, a cidade
da entrega, o tipo do endereço de entrega (comercial ou
residencial) e o nome do cliente. Somente das vendas
realizadas e entregues em 2019.*/
SELECT
	TB_VENDA.ID_VENDA,
	TB_CLIENTE.NM_CLIENTE,
	TB_VENDA.DT_VENDA,
	TB_VENDA.DT_ENTREGA,
	TB_ENDERECO.NM_CIDADE,
	TB_ENDERECOCLIENTE.DS_TIPOENDERECO
FROM TB_VENDA
	INNER JOIN TB_ENDERECO
		ON TB_VENDA.ID_ENDERECOENTREGA = TB_ENDERECO.ID_ENDERECO
	INNER JOIN TB_ENDERECOCLIENTE
		ON TB_ENDERECOCLIENTE.ID_ENDERECO = TB_ENDERECO.ID_ENDERECO AND TB_VENDA.ID_CLIENTE = TB_ENDERECOCLIENTE.ID_CLIENTE
	INNER JOIN TB_CLIENTE
		ON TB_VENDA.ID_CLIENTE = TB_CLIENTE.ID_CLIENTE
WHERE YEAR(TB_VENDA.DT_ENTREGA) = 2019 

/*3. Retorne o nome dos produtos que nunca foram
vendidos.*/

SELECT * 
FROM TB_PRODUTO	
	LEFT JOIN TB_VENDAITEM 
		ON TB_PRODUTO.ID_PRODUTO = TB_VENDAITEM.ID_PRODUTO
WHERE TB_VENDAITEM.ID_PRODUTO IS NULL


/*4. Exiba os produtos que foram vendidos, mas a data da
venda está fora do período inicial e final cadastrado na
tabela de produtos. Considere que produtos sem data
final de venda ainda estão sendo comercializados. Exiba
somente o nome do produto, data de inicio de venda e
data final de venda.*/

SELECT DISTINCT
	TB_PRODUTO.NM_PRODUTO,
	TB_PRODUTO.DT_INICIOVENDA,
	ISNULL(TB_PRODUTO.DT_FIMVENDA, GETDATE()) DT_FIMVENDA
FROM TB_VENDAITEM
	INNER JOIN TB_VENDA
		ON TB_VENDAITEM.ID_VENDA = TB_VENDA.ID_VENDA
	INNER JOIN TB_PRODUTO
		ON TB_VENDAITEM.ID_PRODUTO = TB_PRODUTO.ID_PRODUTO
WHERE TB_VENDA.DT_VENDA > ISNULL(TB_PRODUTO.DT_FIMVENDA, GETDATE()) --VENDA DEPOIS DO FIM
OR TB_VENDA.DT_VENDA < TB_PRODUTO.DT_INICIOVENDA                    --VENDA ANTES DO INICIO
ORDER BY TB_PRODUTO.NM_PRODUTO


SELECT DISTINCT
	TB_PRODUTO.NM_PRODUTO,
	TB_PRODUTO.DT_INICIOVENDA,
	ISNULL(TB_PRODUTO.DT_FIMVENDA, GETDATE()) DT_FIMVENDA
FROM TB_VENDAITEM
	INNER JOIN TB_VENDA
		ON TB_VENDAITEM.ID_VENDA = TB_VENDA.ID_VENDA
	INNER JOIN TB_PRODUTO
		ON TB_VENDAITEM.ID_PRODUTO = TB_PRODUTO.ID_PRODUTO
WHERE DT_VENDA > ISNULL(TB_PRODUTO.DT_FIMVENDA, GETDATE()) --VENDA DEPOIS DO FIM
OR DT_VENDA < DT_INICIOVENDA --VENDA ANTES DO INICIO
ORDER BY 1
 

/*5. Selecione as categorias superiores que não possuem
categorias atreladas.*/
SELECT 
	SUPERIOR.ID_CATEGORIA,
	SUPERIOR.NM_CATEGORIA 
FROM TB_CATEGORIA AS SUPERIOR
	 LEFT JOIN TB_CATEGORIA AS INFERIOR 
		ON INFERIOR.ID_CATEGORIA_SUPERIOR = SUPERIOR.ID_CATEGORIA
	WHERE INFERIOR.ID_CATEGORIA_SUPERIOR IS NULL

SELECT DISTINCT ID_CATEGORIA FROM TB_CATEGORIA

 



