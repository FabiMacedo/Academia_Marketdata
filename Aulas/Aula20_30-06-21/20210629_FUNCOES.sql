-- FUNÇÕES DE TEXTO
SELECT *,
	SUBSTRING(CD_CODIGOPOSTAL,1,5) CEP5,
	SUBSTRING(CD_CODIGOPOSTAL,6,3) CEP3_FIM,

	CONCAT(SUBSTRING(CD_CODIGOPOSTAL,1,5),'-',SUBSTRING(CD_CODIGOPOSTAL,6,3)) CEP_TRATADO
FROM TB_ENDERECO


SELECT ID_CLIENTE, NM_CLIENTE, 
	CONCAT('(',SUBSTRING(NR_TELEFONE,1,2),')',SUBSTRING(NR_TELEFONE,3,5),'-',SUBSTRING(NR_TELEFONE,8,4) ) AS TELEFONE_TRATADO
FROM TB_CLIENTE

--
SELECT *,
	LEFT (CD_CODIGOPOSTAL,5) CEP5,
	RIGHT(CD_CODIGOPOSTAL,3) CEP3_FIM,
	
	CONCAT(LEFT (CD_CODIGOPOSTAL,5),'-',RIGHT(CD_CODIGOPOSTAL,3)) CEP_TRATADO
FROM TB_ENDERECO


UPDATE TB_ENDERECO
SET CD_CODIGOPOSTAL = CONCAT(LEFT (CD_CODIGOPOSTAL,5),'-',RIGHT(CD_CODIGOPOSTAL,3))

-- ENDEREÇO E CIDADE EM MAIUSCULO, NOME PAÍS EM MINUSCULO
SELECT 
	UPPER(DS_ENDERECO) ENDERECO,
	UPPER(NM_CIDADE)   CIDADE,
	LOWER(NM_PAIS)	   PAIS
FROM TB_ENDERECO

-- RETIRA ESPAÇOS EM BRANCO DO COMEÇO (LTRIM) OU DO FIM (RTRIM)
SELECT '      12345'
SELECT 	LTRIM('      12345') 

SELECT '12345     '
SELECT RTRIM('12345     ')

SELECT TRIM('      12345      ')
SELECT RTRIM(LTRIM('      12345      '))

-- SEPARANDO NOME E SOBRENOME
SELECT 
	NM_CLIENTE,
	LEN(NM_CLIENTE)				QTD_CARACTERES,
	CHARINDEX(' ',NM_CLIENTE)	POSICAO_ESPACO,
	LEFT(NM_CLIENTE,CHARINDEX(' ',NM_CLIENTE)-1) AS PRIMEIRO_NOME,
	RTRIM(LEFT(NM_CLIENTE,CHARINDEX(' ',NM_CLIENTE))) PRIMEIRO_NOME,

	LEN(NM_CLIENTE)-CHARINDEX(' ',NM_CLIENTE),
	RIGHT(NM_CLIENTE,LEN(NM_CLIENTE)-CHARINDEX(' ',NM_CLIENTE)) AS SOBRENOME,

	REPLACE(NM_CLIENTE,LEFT(NM_CLIENTE,CHARINDEX(' ',NM_CLIENTE)),'') SOBRENOME

	
FROM TB_CLIENTE


SELECT 
	DS_ENDERECO,
	REPLACE(REPLACE(DS_ENDERECO,'RUA','R.'),'AVENIDA','AV.')
FROM TB_ENDERECO


-- "TROCAR" RESIDENCIAL POR R COMERCIAL POR C
SELECT *,
	CASE DS_TIPOENDERECO
		WHEN 'COMERCIAL'	THEN	'C'
		WHEN 'RESIDENCIAL'  THEN	'R'
		ELSE 'SEM INFORMAÇÃO'
	END AS CD_TIPOENDERECO
FROM TB_ENDERECOCLIENTE

SELECT *, 
	CASE DS_STATUS 
		WHEN 'ENTREGUE'	THEN	1 --ENTREGUES
		ELSE 0					  --NÃO ENTREGUES	
	END AS FL_ENTREGUE 
FROM TB_VENDA
ORDER BY DT_VENDA DESC

SELECT *, 
	CASE DS_STATUS 
		WHEN 'ENTREGUE'				THEN	1 --ENTREGUES
		WHEN 'CANCELADO'			THEN	0 --NÃO ENTREGUES	
		WHEN 'AGUARDANDO PAGAMENTO'	THEN	0 --NÃO ENTREGUES	
		WHEN 'EM TRANSPORTE'		THEN	0 --NÃO ENTREGUES	
	END AS FL_ENTREGUE 
FROM TB_VENDA
ORDER BY DT_VENDA DESC

SELECT *, 
	CASE  
		WHEN DS_STATUS = 'ENTREGUE'	THEN	1   --ENTREGUES
		ELSE 0									--NÃO ENTREGUES	
	END AS FL_ENTREGUE 
FROM TB_VENDA
ORDER BY DT_VENDA DESC

SELECT *,
	CASE	
		WHEN NM_ESTADO IN ('PR','RS','SC') THEN 'SUL'
		WHEN NM_ESTADO IN ('SP','RJ','MG','ES') THEN 'SUDESTE'
		WHEN NM_ESTADO IN ('MS','MT','GO','DF')	THEN 'CENTROESTE'
		WHEN NM_ESTADO IN ('TO','AC','AM','AP','PA','RR','RO') THEN 'NORTE'
		ELSE 'NORDESTE'
	END REGIAO
FROM TB_ENDERECO

SELECT
	*,
	CASE	
		WHEN VL_PRECOVENDA BETWEEN 0 AND 100				 THEN 'BARATO'
		WHEN VL_PRECOVENDA > 100  AND VL_PRECOVENDA <= 1000  THEN 'CARO'
		WHEN VL_PRECOVENDA > 1000 AND VL_PRECOVENDA <= 10000 THEN 'MUITO CARO'
		ELSE 'IMPOSSIVEL DE COMPRAR'
	END FAIXA_PRECO
FROM TB_PRODUTO
ORDER BY FAIXA_PRECO

-- FUNÇÃO IIF
SELECT 
 *,
 CASE 
	WHEN VL_FRETE > 0 THEN	'FRETE PAGO'
	ELSE 'FRETE GRATIS'
 END
FROM TB_VENDA

SELECT *, 
	IIF(VL_FRETE > 0, 'FRETE PAGO', 'FRETE GRATIS')
FROM TB_VENDA

SELECT
	*,
	CASE	
		WHEN VL_PRECOVENDA BETWEEN 0 AND 100				 THEN 'BARATO'
		WHEN VL_PRECOVENDA > 100  AND VL_PRECOVENDA <= 1000  THEN 'CARO'
		WHEN VL_PRECOVENDA > 1000 AND VL_PRECOVENDA <= 10000 THEN 'MUITO CARO'
		ELSE 'IMPOSSIVEL DE COMPRAR'
	END FAIXA_PRECO,
	IIF(VL_PRECOVENDA BETWEEN 0 AND 100, 
	    'BARATO', 
		IIF(VL_PRECOVENDA <= 1000,
		    'CARO',
			IIF(VL_PRECOVENDA <= 10000,
				'MUITO CARO',
				'IMPOSSIVEL DE COMPRAR'
				)
			)
		)
FROM TB_PRODUTO
ORDER BY FAIXA_PRECO


-- EXTRAINDO ANOS, MESES E DIAS
SELECT 
	NM_PRODUTO,
	YEAR(DT_INICIOVENDA)	ANO_INIVENDA,
	MONTH(DT_INICIOVENDA)	MES_INIVENDA,
	DAY(DT_INICIOVENDA)		DIA_INIVENDA
FROM TB_PRODUTO

-- PRODUTOS COM INICIO DE VENDA EM 2019
SELECT * FROM TB_PRODUTO
WHERE DT_INICIOVENDA BETWEEN '20190101' AND '20191231'

SELECT * FROM TB_PRODUTO
WHERE YEAR(DT_INICIOVENDA) = 2019

-- PRODUTOS COM INICIO DE VENDA NO 1º TRI DE 2019
SELECT * FROM TB_PRODUTO
WHERE MONTH(DT_INICIOVENDA) IN (1,2,3) AND YEAR(DT_INICIOVENDA) = 2019

-- PRODUTOS COM INICIO DE VENDA NO 1º TRI DE 2019 "E" NO 3ºTRI DE 2020
SELECT * FROM TB_PRODUTO
WHERE (MONTH(DT_INICIOVENDA) IN (1,2,3) AND YEAR(DT_INICIOVENDA) = 2019)
OR    (MONTH(DT_INICIOVENDA) IN (7,8,9) AND YEAR(DT_INICIOVENDA) = 2020)

-- RETORNAR DATA E HORA DO SERVIDOR
SELECT GETDATE()

-- TODOS OS DADOS DAS VENDAS DO MÊS ATUAL
SELECT *, MONTH(GETDATE()), MONTH(DT_VENDA) FROM TB_VENDA
WHERE MONTH(GETDATE()) = MONTH(DT_VENDA) AND YEAR(GETDATE()) = YEAR(DT_VENDA) 
ORDER BY DT_VENDA

-- TEMPO (DIAS) QUE OS VENDAS ESTÃO AGUARDANDO PAGAMENTO
SELECT 
	*,
	DATEDIFF(DAY,DT_VENDA,GETDATE()) TEMPO_AGUARDANDO_PAGAMENTO
FROM TB_VENDA
WHERE DS_STATUS = 'AGUARDANDO PAGAMENTO'
ORDER BY DT_VENDA

-- EXIBIR ID_VENDA DAS VENDAS QUE ESTÃO AGUARDANDO PAGAMENTO A MAIS DE 3 DIAS
SELECT ID_VENDA
FROM TB_VENDA
WHERE DS_STATUS = 'AGUARDANDO PAGAMENTO'
AND DATEDIFF(DAY,DT_VENDA,GETDATE()) > 3

-- CALCULAR DATA ESTIMADA DE ENTREGA PARA AS VENDAS QUE ESTÃO EM TRANSPORTE, CONSIDERAR 5 DIAS COMO ENTREGA ESTIMADA.
SELECT
	ID_VENDA,
	DT_VENDA,
	DT_ENVIO,
	DATEADD(DAY,5,DT_ENVIO) AS DATA_ESTIMADA_ENTREGA
FROM TB_VENDA
WHERE DS_STATUS = 'EM TRANSPORTE'

SELECT DATEADD(HOUR,3,GETDATE())

-- PARTES DA DATA
SELECT 
	GETDATE()                       DATA_HOJE,
	DATEPART(DAY, GETDATE())		DIA	, 
	DATEPART(HOUR, GETDATE())		HORA,
	DATEPART(MONTH, GETDATE())		MES,
	DATEPART(QUARTER, GETDATE())	TRIMESTRE,
	DATEPART(WEEK, GETDATE())		SEMANA_DO_ANO,
	DATEPART(WEEKDAY, GETDATE())	DIA_SEMANA

-- FUNÇÕES NUMÉRICAS

SELECT
	 ABS(-14.2)		VALOR_ABSOLUTO	-- POSITIVO
	,ABS(14.2)		VALOR_ABSOLUTO	-- POSITIVO
	,CEILING(14.2)	ARREDONDA_CIMA
	,CEILING(14.8)	ARREDONDA_CIMA
	,FLOOR(14.2)	ARREDONDA_BAIXO
	,FLOOR(14.8)	ARREDONDA_BAIXO
	,ROUND(14.215,0)  ARREDONDAMENTO_MATEMATICO
	,ROUND(14.888,0)  ARREDONDAMENTO_MATEMATICO
	,ROUND(14.500,0)  ARREDONDAMENTO_MATEMATICO
	,POWER(2,3)		  DOIS_AO_CUBO	
	,POWER(3,5)		  TRES_A_QUINTA
	,SQRT(16)		  RAIZ_QUADRADA
	,SQRT(15)		  RAIZ_QUADRADA

-- VALOR ALEATÓRIO
SELECT RAND(), * FROM TB_CLIENTE

SELECT RAND() 

-- VALOR ALERATÓRIO ENTRE 100 E 1000
SELECT 100+RAND()*900

-- VALOR ALEATÓRIO ENTRE 1 E 60
SELECT ROUND(1+RAND()*59,0)

-- CONVERSÃO DE DADOS
SELECT CAST('123' AS DECIMAL(5,2))

SELECT CAST('ABC' AS INT)

SELECT *, CAST(DS_TIPOENDERECO AS CHAR(1)) FROM TB_ENDERECOCLIENTE

SELECT *, CAST(VL_SUBTOTAL AS INT), CAST(VL_FRETE AS INT) FROM TB_VENDA

SELECT *, CAST(ROUND(VL_SUBTOTAL,0) AS INT), CAST(ROUND(VL_FRETE,0) AS INT) FROM TB_VENDA

SELECT *, CONVERT(INT, VL_SUBTOTAL) FROM TB_VENDA

SELECT *, CONVERT(VARCHAR(10), DT_VENDA,103) FROM TB_VENDA

SELECT *, CONVERT(VARCHAR(10), DT_VENDA,112) FROM TB_VENDA

SELECT *, CONVERT(VARCHAR(10), DT_VENDA,104) FROM TB_VENDA

SELECT *, CONVERT(VARCHAR(10), DT_VENDA,105) FROM TB_VENDA