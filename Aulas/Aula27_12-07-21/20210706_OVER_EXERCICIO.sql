SELECT * FROM #VENDA_MENSAL
ORDER BY 3,1,2

USE DB_MADA_VAREJO 
/*
CRIE UMA TABELA TEMPORÁRIA #VENDA_MENSAL COM AS SEGUINTES COLUNAS:
ANO_VENDA
MES_VENDA
ESTADO_ENTREGA
VALOR_VENDA
*/
SELECT
	YEAR(TB_VENDA.DT_VENDA)							ANO_VENDA,
	MONTH(TB_VENDA.DT_VENDA)						MES_VENDA,
	TB_ENDERECO.NM_ESTADO							ESTADO_ENTREGA,
	SUM(TB_VENDA.VL_SUBTOTAL + TB_VENDA.VL_FRETE)	VALOR_VENDA
INTO #VENDA_MENSAL
FROM TB_VENDA
	INNER JOIN TB_ENDERECO
		ON TB_VENDA.ID_ENDERECOENTREGA = TB_ENDERECO.ID_ENDERECO
GROUP BY 
	YEAR(TB_VENDA.DT_VENDA)							
	,MONTH(TB_VENDA.DT_VENDA)						
	,TB_ENDERECO.NM_ESTADO							


--TENDO COMO BASE A TABELA #VENDA_MENSAL, 
--CLASSIFIQUE SE O ANO E MÊS TEVE MAIS VENDA OU MENOS VENDA QUE O MÊS ANTERIOR PARA CADA ESTADO.

SELECT 
	*,
	LAG(VALOR_VENDA) OVER (PARTITION BY ESTADO_ENTREGA ORDER BY ESTADO_ENTREGA, ANO_VENDA, MES_VENDA) VALOR_ANTERIOR,
	IIF ( LAG(VALOR_VENDA) OVER (PARTITION BY ESTADO_ENTREGA ORDER BY ESTADO_ENTREGA, ANO_VENDA, MES_VENDA) IS NULL,
			NULL,
				IIF( VALOR_VENDA > LAG(VALOR_VENDA) OVER (PARTITION BY ESTADO_ENTREGA ORDER BY ESTADO_ENTREGA, ANO_VENDA, MES_VENDA) ,
					'VENDEU MAIS',
					'VENDEU MENOS')
		) VENDEU_MAIS_MENOS,
	 
	 IIF (FIRST_VALUE(VALOR_VENDA) OVER (PARTITION BY ESTADO_ENTREGA ORDER BY ANO_VENDA, MES_VENDA) = VALOR_VENDA,
					NULL,
				IIF( VALOR_VENDA > LAG(VALOR_VENDA) OVER (PARTITION BY ESTADO_ENTREGA ORDER BY ESTADO_ENTREGA, ANO_VENDA, MES_VENDA) ,
					'VENDEU MAIS',
					'VENDEU MENOS')
		) VENDEU_MAIS_MENOS,
		(VALOR_VENDA / LAG(VALOR_VENDA) OVER (PARTITION BY ESTADO_ENTREGA ORDER BY ESTADO_ENTREGA, ANO_VENDA, MES_VENDA) 
			 ) -1  AS PERC_EVOLUCAO_VENDA ,
	IIF(		IIF(			LAG(ANO_VENDA) OVER(ORDER BY ESTADO_ENTREGA, ANO_VENDA, MES_VENDA) > MES_VENDA 			AND ANO_VENDA LIKE '2019' 			AND LAG(ANO_VENDA) OVER(ORDER BY ESTADO_ENTREGA, ANO_VENDA, MES_VENDA) LIKE '2021', 		NULL, 		LAG(VALOR_VENDA) OVER(ORDER BY ESTADO_ENTREGA, ANO_VENDA, MES_VENDA)) IS NULL,	'INICIO', 	(IIF(VALOR_VENDA < IIF(LAG(MES_VENDA) OVER(ORDER BY ESTADO_ENTREGA, ANO_VENDA, MES_VENDA) > MES_VENDA AND ANO_VENDA LIKE '2019' AND LAG(ANO_VENDA) OVER(ORDER BY ESTADO_ENTREGA, ANO_VENDA, MES_VENDA) LIKE '2021', NULL, LAG(VALOR_VENDA) OVER(ORDER BY ESTADO_ENTREGA, ANO_VENDA, MES_VENDA)),				'DEFICIT',				'SUPERAVIT'				)			)		) AS SITUAÇÃO

FROM #VENDA_MENSAL
ORDER BY ESTADO_ENTREGA, ANO_VENDA, MES_VENDA


--TENDO COMO BASE A TABELA #VENDA_MENSAL, 
--SELECIONE O MÊS COM MAIOR VALOR DE VENDA DE CADA ANO PARA CADA ESTADO.
SELECT 
	*,
	MAX(VALOR_VENDA) OVER (PARTITION BY ANO_VENDA, ESTADO_ENTREGA) AS MAIOR_VALOR_ANO_ESTADO,
	ROW_NUMBER() OVER (PARTITION BY ANO_VENDA, ESTADO_ENTREGA ORDER BY VALOR_VENDA DESC) AS RANKING_MES
INTO #VENDA_MENSAL_ESTADO_ANO -- DROP TABLE #VENDA_MENSAL_ESTADO_ANO
FROM #VENDA_MENSAL
ORDER BY ESTADO_ENTREGA, ANO_VENDA, MES_VENDA

SELECT * FROM #VENDA_MENSAL_ESTADO_ANO
WHERE VALOR_VENDA = MAIOR_VALOR_ANO_ESTADO
ORDER BY ESTADO_ENTREGA, ANO_VENDA, MES_VENDA

SELECT * FROM #VENDA_MENSAL_ESTADO_ANO
WHERE RANKING_MES = 1
ORDER BY ESTADO_ENTREGA, ANO_VENDA, MES_VENDA