--Coloque o banco DB_MADA_VAREJO em uso
USE DB_MADA_VAREJO

--1. Selecione o nome do cliente, o nome dos produtos que ele comprou, o mês/ano da compra no seguinte formato (janeiro/2019).
-- Ordene pelo nome do cliente e data de venda.

SELECT 
	TB_CLIENTE.NM_CLIENTE,
	TB_PRODUTO.NM_PRODUTO,
	CONCAT(CASE MONTH(TB_VENDA.DT_VENDA)
				WHEN 1	THEN 'janeiro'
				WHEN 2	THEN 'fevereiro'
				WHEN 3	THEN 'março'
				WHEN 4	THEN 'abril'
				WHEN 5	THEN 'maio'
				WHEN 6	THEN 'junho'
				WHEN 7	THEN 'julho'
				WHEN 8	THEN 'agosto'
				WHEN 9	THEN 'setembro'
				WHEN 10	THEN 'outubro'
				WHEN 11	THEN 'novembro'
				WHEN 12	THEN 'dezembro'
			end,
			'/',
			year(TB_VENDA.DT_VENDA) )
	FROM TB_CLIENTE
	INNER JOIN TB_VENDA 
		ON TB_CLIENTE.ID_CLIENTE = TB_VENDA.ID_CLIENTE
	INNER JOIN TB_VENDAITEM
		ON TB_VENDAITEM.ID_VENDA = TB_VENDA.ID_VENDA
	INNER JOIN TB_PRODUTO 
		ON TB_PRODUTO.ID_PRODUTO = TB_VENDAITEM.ID_PRODUTO
ORDER BY TB_CLIENTE.NM_CLIENTE, TB_VENDA.DT_VENDA

--2. Exiba o id da venda, a data da venda, a data da entrega, a cidade da entrega, o tipo do endereço de entrega (comercial ou residencial) e o  nome do cliente. 
--Somente das vendas realizadas e entregues em 2019.

   SELECT 
		*
   FROM TB_VENDA
	INNER JOIN TB_ENDERECO			ON TB_VENDA.ID_ENDERECOENTREGA = TB_ENDERECO.ID_ENDERECO
	INNER JOIN TB_ENDERECOCLIENTE	ON TB_ENDERECOCLIENTE.ID_ENDERECO =  TB_ENDERECO.ID_ENDERECO AND TB_VENDA.ID_CLIENTE = TB_ENDERECOCLIENTE.ID_CLIENTE
	INNER JOIN TB_CLIENTE			ON TB_VENDA.ID_CLIENTE = TB_CLIENTE.ID_CLIENTE
   WHERE YEAR(TB_VENDA.DT_ENTREGA)  = 2019 AND YEAR(TB_VENDA.DT_VENDA) = 2019


--3. Retorne o nome dos produtos que nunca foram vendidos.
SELECT * 
	FROM TB_PRODUTO
	LEFT JOIN TB_VENDAITEM
		ON TB_PRODUTO.ID_PRODUTO = TB_VENDAITEM.ID_PRODUTO
WHERE TB_VENDAITEM.ID_PRODUTO IS NULL

--4. Exiba os produtos que foram vendidos, mas a data da venda está fora do período inicial e final cadastrado na tabela de produtos.
-- Considere que produtos sem data final de venda ainda estão sendo comercializados. 
-- Exiba somente o nome do produto, data de inicio de venda e data final de venda.

SELECT DISTINCT
	TB_PRODUTO.NM_PRODUTO,
	TB_PRODUTO.DT_INICIOVENDA,
	ISNULL(TB_PRODUTO.DT_FIMVENDA,GETDATE()) DT_FIMVENDA
 FROM TB_VENDAITEM
	INNER JOIN TB_VENDA		ON TB_VENDAITEM.ID_VENDA = TB_VENDA.ID_VENDA
	INNER JOIN TB_PRODUTO	ON TB_VENDAITEM.ID_PRODUTO = TB_PRODUTO.ID_PRODUTO
WHERE DT_VENDA > ISNULL(TB_PRODUTO.DT_FIMVENDA,GETDATE()) -- VENDA DEPOIS DO FIM 
OR DT_VENDA < DT_INICIOVENDA							 -- VENDA ANTES DO INICIO
ORDER BY 1

SELECT DISTINCT
	TB_PRODUTO.NM_PRODUTO,
	TB_PRODUTO.DT_INICIOVENDA,
	ISNULL(TB_PRODUTO.DT_FIMVENDA,GETDATE()) DT_FIMVENDA
 FROM TB_VENDAITEM
	INNER JOIN TB_VENDA		ON TB_VENDAITEM.ID_VENDA = TB_VENDA.ID_VENDA
	INNER JOIN TB_PRODUTO	ON TB_VENDAITEM.ID_PRODUTO = TB_PRODUTO.ID_PRODUTO
WHERE DT_VENDA NOT BETWEEN DT_INICIOVENDA AND DT_FIMVENDA
ORDER BY 1

SELECT DISTINCT   TB_PRODUTO.NM_PRODUTO,   TB_PRODUTO.DT_INICIOVENDA,   ISNULL(TB_PRODUTO.DT_FIMVENDA,GETDATE())   AS DT_FIMVENDA  -- IIF((TB_VENDA.DT_VENDA > TB_PRODUTO.DT_FIMVENDA) OR (TB_VENDA.DT_VENDA < TB_PRODUTO.DT_INICIOVENDA),TB_VENDA.DT_VENDA,NULL) AS [DT_VENDA]FROM TB_PRODUTO   INNER JOIN TB_VENDAITEM      ON TB_PRODUTO.ID_PRODUTO = TB_VENDAITEM.ID_PRODUTO   INNER JOIN TB_VENDA      ON TB_VENDAITEM.ID_VENDA = TB_VENDA.ID_VENDAWHERE IIF((TB_VENDA.DT_VENDA > TB_PRODUTO.DT_FIMVENDA) OR (TB_VENDA.DT_VENDA < TB_PRODUTO.DT_INICIOVENDA),TB_VENDA.DT_VENDA,NULL) IS NOT NULL



--5. Selecione as categorias superiores que não possuem categorias atreladas.
SELECT SUPERIOR.NM_CATEGORIA 
	FROM TB_CATEGORIA SUPERIOR
	 LEFT JOIN TB_CATEGORIA INFERIOR ON INFERIOR.ID_CATEGORIA_SUPERIOR = SUPERIOR.ID_CATEGORIA
	WHERE INFERIOR.ID_CATEGORIA_SUPERIOR IS NULL

SELECT DISTINCT ID_CATEGORIA FROM TB_CATEGORIA